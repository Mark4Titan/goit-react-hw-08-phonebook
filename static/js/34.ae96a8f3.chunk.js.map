{"version":3,"file":"static/js/34.ae96a8f3.chunk.js","mappings":"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","sources":["components/SingUp/SignUp.js","utils/utils.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport { useNavigate } from 'react-router-dom';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport * as authOperations from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport { emailRegexp, nameRegexp, passwordRegexp } from 'utils/utils';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const [nameField, setName] = useState('');\n  const [emailField, setEmail] = useState('');\n  const [passwordField, setPassword] = useState('');\n  const [nameError, setNameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'email' && setEmail(value);\n    name === 'password' && setPassword(value);\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      let regName = new RegExp(nameRegexp).test(value);\n      !regName && setNameError('name must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regName && setNameError(null);\n    }\n    if (name === 'email') {\n      let regEmail = new RegExp(emailRegexp).test(value);\n      !regEmail && setEmailError('Invalid email format');\n      regEmail && setEmailError(null);\n    }\n\n    if (name === 'password') {\n      let regPassword = new RegExp(passwordRegexp).test(value);\n      !regPassword &&\n        setPasswordError('password must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regPassword && setPasswordError(null);\n    }\n  };\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = event.currentTarget.elements;\n\n    const data = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(authOperations.register(data));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(nameError)}\n                  helperText={nameError}\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  value={nameField}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(emailError)}\n                  helperText={emailError}\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  id=\"email\"\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                  value={emailField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(passwordError)}\n                  helperText={passwordError}\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                  value={passwordField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={Boolean(emailError ?? nameError ?? passwordError)}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Button\n                  sx={{ ml: 10, textTransform: 'none' }}\n                  onClick={() => navigate('/login')}\n                >\n                  Already have an account? Sign in\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; \n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; \n"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","SignUp","useState","nameField","setName","emailField","setEmail","passwordField","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","handleChange","e","currentTarget","name","value","handleBlur","regName","RegExp","nameRegexp","test","regEmail","emailRegexp","regPassword","passwordRegexp","dispatch","useDispatch","navigate","useNavigate","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","event","preventDefault","elements","email","password","data","authOperations","reset","mt","container","spacing","item","xs","error","Boolean","helperText","autoComplete","type","required","fullWidth","id","label","autoFocus","onChange","onBlur","disabled","mb","justifyContent","ml","textTransform","onClick","notify","toast","position","autoClose","isContactDubled","arr","key","some","contact","toLocaleLowerCase","schema","yup","shape","matches","number","max"],"sourceRoot":""}