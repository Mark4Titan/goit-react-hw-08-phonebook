{"version":3,"file":"static/js/819.f634f01b.chunk.js","mappings":"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","sources":["components/SignIn/SignIn.js","utils/utils.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport * as authOperations from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport { emailRegexp } from 'utils/utils';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const [emailField, setEmail] = useState('');\n  const [passwordField, setPassword] = useState('');\n  const [emailError, setEmailError] = useState();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'email' && setEmail(value);\n    name === 'password' && setPassword(value);\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'email') {\n      let regEmail = new RegExp(emailRegexp).test(value);\n      !regEmail && setEmailError('Invalid email format');\n      regEmail && setEmailError(null);\n    }\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = event.currentTarget.elements;\n    const data = {\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(authOperations.login(data));\n    event.currentTarget.reset();\n  };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              error={Boolean(emailError)}\n              helperText={emailError}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={handleChange}\n              value={emailField}\n              onBlur={handleBlur}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={handleChange}\n              value={passwordField}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={Boolean(emailError)}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Button\n                  sx={{\n                    ml: 20,\n                    textTransform: 'none',\n                  }}\n                  onClick={() => navigate('/register')}\n                >\n                  Don't have an account? Sign Up\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; \n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; \n"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","SignIn","useState","emailField","setEmail","passwordField","setPassword","emailError","setEmailError","handleChange","e","currentTarget","name","value","dispatch","useDispatch","navigate","useNavigate","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","onSubmit","event","preventDefault","elements","email","password","data","authOperations","reset","noValidate","mt","error","Boolean","helperText","margin","required","fullWidth","id","label","type","autoComplete","autoFocus","onChange","onBlur","regEmail","RegExp","emailRegexp","test","disabled","mb","container","item","ml","textTransform","onClick","notify","toast","position","autoClose","isContactDubled","arr","key","some","contact","toLocaleLowerCase","schema","yup","shape","matches","number","max","nameRegexp","passwordRegexp"],"sourceRoot":""}